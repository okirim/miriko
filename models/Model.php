<?php


namespace App\models;


use App\core\Olivine;
use App\core\Response;
use App\core\Rules;


abstract class Model extends Olivine
{

    public static string $error_validation_message;

    /**
     * Model constructor.
     * @param string $table
     */
    public function __construct(string $table)
    {
        parent::__construct($table);
    }

    /**
     * @return static
     */
    public static function Olivine()
    {
        return new static;
    }

    public static function isValid(array $rules, bool $update = false)
    {
        if (Rules::Validator($rules, $update)) {
            self::$error_validation_message = Rules::Validator($rules, $update);
            return false;
        }
        return true;
    }

    /**
     * @return false|string
     */
    public static function validation_error_response()
    {
        return Response::json_response_error(self::$error_validation_message, 'failed', 400);
    }

    /**
     * @param array $filter
     * @param string $columns
     * @return array
     */
    public static function find(array $filter = [], $columns = '*')
    {
        return parent::find($filter, $columns); // TODO: Change the autogenerated stub
    }

    /**
     * @param array $param
     * @param string $columns
     * @return mixed
     */
    public static function findOne(array $param, string $columns = '')
    {
        return parent::findOne($param, $columns); // TODO: Change the autogenerated stub
    }

    /**
     * @param int $limit
     * @param int $page
     * @param array $filter
     * @param string $columns
     * @return array
     */
    public static function paginate(int $limit, int $page = 1, $filter = [], string $columns = '*')
    {
        return parent::paginate($limit, $page, $filter, $columns); // TODO: Change the autogenerated stub
    }

    /**
     * @return int
     */
    public static function rowCount()
    {
        return parent::rowCount(); // TODO: Change the autogenerated stub
    }

    public static function leftJoin(array $jointTable)
    {
        return parent::leftJoin($jointTable); // TODO: Change the autogenerated stub
    }

    public static function hasMany(string $jointTable)
    {
        parent::hasMany($jointTable); // TODO: Change the autogenerated stub
    }
}